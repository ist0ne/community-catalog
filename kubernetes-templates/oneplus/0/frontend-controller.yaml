apiVersion: v1
kind: ReplicationController
metadata:
  name: ${FRONTEND_NAME}
  labels:
    name: ${FRONTEND_NAME}
spec:
  replicas: ${FRONTEND_REPLICAS}
  selector:
    name: ${FRONTEND_NAME}
  template:
    metadata:
      labels:
        name: ${FRONTEND_NAME}
    spec:
      containers:
      - name: one-plus
        image: d.qianyilc.com/docker_images/qianyisrv-httpd:3
        env:
        - name: DOMAIN_NAME
          value: ${FRONTEND_DOMAIN_NAME}
        - name: ST_DOMAIN_NAME
          value: ${FRONTEND_ST_DOMAIN_NAME}
        - name: REDIS_MASTER
          value: ${REDIS_MASTER_NAME}
        - name: REDIS_SLAVE
          value: ${REDIS_SLAVE_NAME}
        - name: MYSQL_MASTER
          value: ${MYSQL_MASTER_NAME}
        - name: MYSQL_SLAVE
          value: ${MYSQL_SLAVE_NAME}
        ports:
        - containerPort: 443
        volumeMounts:
        - name: frontend-log-persistent-storage
          mountPath: /data1/logs
        - name: frontend-upload-persistent-storage
          mountPath: /data1/vhosts/${FRONTEND_ST_DOMAIN_NAME}/htdocs/upload
        - name: frontend-st-protect-persistent-storage
          mountPath: /data1/www/data/${FRONTEND_DOMAIN_NAME}/st_protect
        resources:
          requests:
            cpu: 1
            memory: 1Gi
        livenessProbe:
          # httpGet:
          #  path: /ping.html
          #  port: 443
          #  host: ${FRONTEND_ST_DOMAIN_NAME}
          #  scheme: HTTPS
          tcpSocket:
            port: 443
          initialDelaySeconds: 30
          timeoutSeconds: 5
      volumes:
      - name: frontend-log-persistent-storage
        emptyDir: {}
      - name: frontend-upload-persistent-storage
        nfs:
          server: ${NFS_SERVER}
          path: ${NFS_PATH}/upload
          readOnly: false
      - name: frontend-st-protect-persistent-storage
        nfs:
          server: ${NFS_SERVER}
          path: ${NFS_PATH}/st_protect
          readOnly: false

